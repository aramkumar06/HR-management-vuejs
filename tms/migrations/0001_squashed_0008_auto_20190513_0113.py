# Generated by Django 2.1.2 on 2019-05-13 01:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('tms', '0001_initial'), ('tms', '0002_auto_20181102_0738'), ('tms', '0003_project_user'), ('tms', '0004_auto_20190205_0202'), ('tms', '0005_auto_20190512_2158'), ('tms', '0006_auto_20190512_2208'), ('tms', '0007_remove_earning_month_of_year'), ('tms', '0008_auto_20190513_0113')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=20)),
                ('birthday', models.DateField()),
                ('address', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=15)),
                ('last_name', models.CharField(max_length=15)),
                ('email', models.EmailField(help_text='Email ', max_length=30)),
                ('email_password', models.CharField(help_text='Email password', max_length=40)),
                ('skype', models.CharField(help_text='Skype username. It could be null.', max_length=30, null=True)),
                ('skype_password', models.CharField(help_text='Skype password. It could be null.', max_length=30, null=True)),
                ('status', models.BooleanField(default=True, help_text='It represents whether account is active or not.')),
                ('phone_number', models.CharField(help_text='Phone number related to this account.It could be null', max_length=11, null=True)),
                ('created_date', models.DateField(help_text='The date when the account is created.')),
                ('suspended_date', models.DateField(help_text='The date when the account is suspended.', null=True)),
                ('registered_date', models.DateTimeField(auto_now_add=True)),
                ('recital', models.TextField(help_text='May include zipcode, address and other information.', max_length=1000, null=True)),
                ('title', models.CharField(help_text='Title', max_length=150)),
                ('overview', models.TextField(help_text='Overview', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=15)),
                ('last_name', models.CharField(max_length=15)),
                ('email', models.EmailField(help_text='Email address of client', max_length=30, null=True)),
                ('skype', models.CharField(help_text='Skype username of client', max_length=30, null=True)),
                ('phone_number', models.CharField(help_text='Phone number of client', max_length=11, null=True)),
                ('url', models.URLField(help_text='Reference URL', max_length=100, null=True)),
                ('recital', models.TextField(help_text='Explain his attitude and other experiences.', max_length=1000, null=True)),
                ('registered_date', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('code', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('start_week_date', models.DateField(help_text='Start date of week')),
                ('end_week_date', models.DateField(help_text='End date of week')),
                ('week_of_year', models.IntegerField()),
                ('month_of_year', models.IntegerField()),
                ('year', models.IntegerField()),
                ('week_year', models.CharField(help_text='EX: 2018-48', max_length=7)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('registered_date', models.DateTimeField(auto_now_add=True)),
                ('earn_type', models.CharField(choices=[('GT', 'Get'), ('FE', 'Fee'), ('RF', 'Refund')], default='GT', max_length=2)),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('BL', 'Balance'), ('WD', 'Withdraw')], default='PD', max_length=2)),
                ('approved_date', models.DateTimeField(help_text='Date Time when confirm balance', null=True)),
                ('withdrawn_date', models.DateTimeField(help_text='Date Time when withdraw', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FiAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=1000)),
                ('start_date', models.DateField(help_text='Project start date')),
                ('end_date', models.DateField(help_text='Project end date', null=True)),
                ('status', models.CharField(choices=[('ST', 'Start'), ('EN', 'End'), ('DS', 'Dispute')], default='ST', max_length=2)),
                ('project_type', models.CharField(choices=[('HR', 'Hourly'), ('FX', 'Fixed')], default='FX', max_length=2)),
                ('price', models.FloatField(help_text='Fixed price of project or hourly rate of project')),
                ('limit', models.IntegerField(null=True)),
                ('posted_datetime', models.DateTimeField(help_text='Date and Time when the job is posted', null=True)),
                ('applied_datetime', models.DateTimeField(help_text='Date and Time when applying for job', null=True)),
                ('applied_proposals_count', models.IntegerField(help_text='Total proposals when hiring', null=True)),
                ('interview_count', models.IntegerField(help_text='Total interview count when hiring', null=True)),
                ('registered_date', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Account')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('url', models.URLField(max_length=100)),
                ('description', models.TextField(max_length=5000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Withdraw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='earning',
            name='project',
            field=models.ForeignKey(help_text='used when calculating per project', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Project'),
        ),
        migrations.AddField(
            model_name='client',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Country'),
        ),
        migrations.AddField(
            model_name='client',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Site'),
        ),
        migrations.AddField(
            model_name='account',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Country'),
        ),
        migrations.AddField(
            model_name='account',
            name='site',
            field=models.ForeignKey(help_text='Working site', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Site'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.ForeignKey(help_text='Owner of account', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tms.Team'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='user_in_charge',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='earning',
            name='earn_type',
        ),
        migrations.RemoveField(
            model_name='earning',
            name='status',
        ),
        migrations.RemoveField(
            model_name='earning',
            name='week_year',
        ),
        migrations.AddField(
            model_name='earning',
            name='approved_by',
            field=models.ForeignKey(help_text='user who confirmed paying', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='earning',
            name='end_week_date',
        ),
        migrations.RemoveField(
            model_name='earning',
            name='start_week_date',
        ),
        migrations.AddField(
            model_name='earning',
            name='comments',
            field=models.TextField(help_text='Add comments here', max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='earning',
            name='status',
            field=models.CharField(choices=[('PD', 'Pending'), ('BL', 'Balance'), ('WD', 'Withdraw'), ('FE', 'Fee'), ('RF', 'Refund')], default='PD', max_length=2),
        ),
        migrations.AlterField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('ST', 'Start'), ('EN', 'End')], default='ST', max_length=2),
        ),
        migrations.RemoveField(
            model_name='earning',
            name='month_of_year',
        ),
        migrations.AddField(
            model_name='account',
            name='deleted_at',
            field=models.DateTimeField(help_text='deleted date', null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='deleted_at',
            field=models.DateTimeField(help_text='deleted date', null=True),
        ),
        migrations.AddField(
            model_name='earning',
            name='deleted_at',
            field=models.DateTimeField(help_text='deleted date', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='deleted_at',
            field=models.DateTimeField(help_text='deleted date', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='deleted_at',
            field=models.DateTimeField(help_text='deleted date', null=True),
        ),
    ]
